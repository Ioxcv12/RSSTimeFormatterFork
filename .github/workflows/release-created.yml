name: tagged-release

# Controls when the action will run. 
on:
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tagged-release:
    name: "Tagged Release"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
        
      - name: Download required assemblies
        id: download-assemblies
        shell: bash
        env: 
          KSP_ZIP_PASSWORD: ${{ secrets.KSP_ZIP_PASSWORD }}
        run: |
          curl https://ksp-ro.s3-us-west-2.amazonaws.com/TestFlight_bin_KSP-1.10.zip --output /tmp/bins.zip
          KSP_DLL_PATH="/opt/ksp/assembly"
          echo "::set-output name=ksp-dll-path::${KSP_DLL_PATH}"
          mkdir -p "${KSP_DLL_PATH}"
          unzip -P "${KSP_ZIP_PASSWORD}" '/tmp/bins.zip' -d "${KSP_DLL_PATH}"
          rm '/tmp/bins.zip'          

      - name: Build mod solution
        run: msbuild /p:Configuration=Release /p:ReferencePath="${{ steps.download-assemblies.outputs.ksp-dll-path }}" RSSTimeFormatter.sln

      - name: Assemble release
        id: assemble-release
        run: |
          RELEASE_DIR="${RUNNER_TEMP}/release"
          echo "Release dir: ${RELEASE_DIR}"
          echo "Release zip: ${RELEASE_DIR}/RSSDateTime-${{ github.event.release.tag_name }}.zip"
          mkdir -v "${RELEASE_DIR}"
          echo "::set-output name=release-dir::${RELEASE_DIR}"
          cp -v -R "${GITHUB_WORKSPACE}/GameData" "${RELEASE_DIR}"
          zip ${RELEASE_DIR}/RSSDateTime-${{ github.event.release.tag_name }}.zip ${RUNNER_TEMP}/release/GameData ${RUNNER_TEMP}/release/GameData/RSSDateTime/* ${RUNNER_TEMP}/release/GameData/RSSDateTime/Plugins/RSSTimeFormatter.dll
          ls -la

      - name: release
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ steps.assemble-release.outputs.release-dir }}/RSSDateTimeFormatter-${{ github.event.release.tag_name }}.zip        
